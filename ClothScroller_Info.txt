
     This document contains information pertaining to the development
methodology and general thoughts regarding the "ClothScroller" program. This
document is presented in a somewhat informal style (atypical of my writing;
however, I am trying to make this a habit in order to extend the readability of
such documents to target a broader audience).

     This program expands on work performed during the construction of the
"Balloons" OpenGL program that I constructed in early 2006. As such, the primary
goals during the construction of the "ClothScroller" program are fairly similar
to those of the "Balloons" program:

     -Developing/extending portions of a re-usable framework for three-
dimensional graphics work.
     -Object oriented program structure/code re-use.
     -Learning/implementing something new and interesting.

     The goals that I set for last year's "Balloons" program were clearly met,
as I was able to employ the re-usable framework from this program during the
development of the "ClothScroller" program, greatly reducing development time.
This reduction in development time made the timely completion of this task
possible, as it appears that my free time was significantly reduced in comparison
to last year. As I mentioned when reviewing the "Balloons" project,
explicit design work (in addition to the fair amount of thought I applied to the
construction of the cloth network classes) should have been performed during
this project in order to expedite the development process (despite the fact that
a functional framework was already available).

     The "ClothScroller" program animates cloth in three-dimensions, with a
scrolling message being depicted on the cloth as it is animated. The cloth
simulation, through the use of a mass-spring network, is the "new and
interesting" topic goal that I mentioned earlier; I originally learned about
this topic while reading an article on the game development site "Gamastura"
while looking for an interesting development project. The springs are used to
produce a relatively simple constraint for the cloth system. Evaluating forces
produced by each spring is relatively simple, as the force generated by a spring
is directly proportional to its displacement. Additionally, three external
forces are applied to the cloth network: wind, gravity, and external damping.

     The forces mentioned earlier are required to provide cloth animation -
gravity causes the cloth to descend in a natural manner, while wind causes the
cloth to "flutter" about. The wind is produced by what is essentially a noise
function that generates output (number used as wind magnitude) based upon a
position in three-dimensional space (the location of a node within the cloth
network). This result is also used to "perturb" a provided wind direction
vector, such that the wind direction is not entirely uniform. Finally, the
viscous damping force is applied to each node within the cloth network based
upon the instantaneous velocity of the node. The viscous damping simulates
damping that occurs from friction between cloth and the air; it also provides a
means to simulate damping imposed by the cloth material itself.

     My programming methodology involves a strong tendency to abstract
particularities of computer-environment specific interactions. More precisely,
file input/output (reading of the scroller text from disk) and the generation of
the scroller image through the use of GDI were abstracted through the use of
"Data Stream Servers". "Data Stream Servers" are classes that accept request
objects, and return data within packet objects. The data is simply referenced
through the use of a void pointer. The interpretation of the data is performed
by clients of the classes, based upon the type of "server" that is being
queried.

     Another interesting aspect of this program is the utilization of a 64-bit
hash to protect the scroller text. I did not want people randomly modifying the
scroller text (as people can often become too creative, and I simply cannot
could not bear witnessing my work being tarnished in any fashion), so the text
is prefixed by a hash. No text will be drawn on the scroller if the hash
evaluated using the text content is not equivalent to the hash that prefixes the
text.

     As with the "Balloons" program, I created "scenes" for the "ClothScroller"
program. Due to the fact that I utilized last year's framework, I was able to
easily create five scenes, as opposed to the three that I created last year.
Although I could have created even more scenes, I decided to stop at five
(perhaps due to lack of creativity, lack of sleep, or a combination of both
elements). I even used the backdrops (yes, simple cylinders) from the last
year's program.

     This year's attempt at music was more successful than last year's. I am
relatively pleased with how the song ("Duke of Hustlers") turned out - probably
better than I expected. Although I started the song almost a week before its
completion, most of the work was done on the Eve of Saint Patrick's day, and
during Saint Patrick's Day - all made possible due to a "fortuitous" sleet
storm. Again, the music was done in Sk@le tracker (version 0.81) - as before, 
the use of VST plugins (reverb, in particular, with a bit of chorus and flanger)
improved the overall sound of the song.

     As always, there are elements of the code/code production that I wish I had
done in a different fashion (or, portions that I simply wish that I had done).
These elements include:

     -Eliminating GLUT from the codebase.
     -Implementing multithreading (e.g. scroller image generation, cloth network
force evaluation, data stream "servers," and OpenGL rendering could all exist in
separate threads).
     -Starting the project on time (although the start date was technically in
January, no real implementation occurred until February 19 - most of the work
performed before this time involved setting up the project, and a few basic
declarations).

     That's about it for now. Perhaps there's more to write, but the motion of
the world certainly will not be arrested if my keystrokes come to a halt.
Besides, I must eat, dance, and sleep tonight (hopefully, in that order, and not
concurrently)...

     It is written in the wind...


     Ayo Oshinnaiye
     March 21, 2007
